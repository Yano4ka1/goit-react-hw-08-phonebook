{"version":3,"file":"static/js/640.ec1ae071.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactListItem.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter;","import css from './ContactForm.module.css';\nimport propTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Box, Button, Container, createTheme, CssBaseline, IconButton, TextField, ThemeProvider, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst theme = createTheme();\n\nexport default function ContactForm({ setModalOpen }) {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n    const handleSubmit = e => {\n      e.preventDefault();\n\n      const data = new FormData(e.currentTarget);\n\n      if (!data.get('name') || !data.get('number')) {\n        return toast.warn('Please fill in all fields');\n      }\n\n      const form = e.currentTarget;\n      let presentContact = false;\n\n      contacts.map(({name}) => {\n      if (name === form.name.value) {\n\n        form.reset();\n\n        presentContact = true;\n        return toast.warn(`${name} is already in contacts`);\n      } else {\n        return null;\n      }\n    });\n\n    if (!presentContact) {\n      dispatch(addContact({\n        name: data.get('name'),\n        number: data.get('number'),\n      }));\n\n      form.reset();\n      setModalOpen(false);\n    }\n  };\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <IconButton\n              type=\"button\"\n              onClick={() => setModalOpen(false)}\n              color=\"error\"\n              className={css.btn_close}\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h5\">\n              Add the contact to your contact book\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={handleSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"number\"\n                label=\"Number\"\n                type=\"number\"\n                id=\"number\"\n              />\n  \n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Add to contacts\n              </Button>\n            </Box>\n          </Box>\n\n        </Container>\n      </ThemeProvider>\n    );\n}\n\nContactForm.propTypes = {\n  setModalOpen: propTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"contacts__container\":\"ContactList_contacts__container__CzfUG\",\"contacts_list\":\"ContactList_contacts_list__jhchV\",\"contact_item\":\"ContactList_contact_item__MaQF6\",\"btn\":\"ContactList_btn__6Piat\",\"contacts__input\":\"ContactList_contacts__input__BJUTD\",\"contacts__quantity\":\"ContactList_contacts__quantity__vEGRC\",\"contacts__title\":\"ContactList_contacts__title__W8n9x\"};","import { Avatar, IconButton, ListItem, ListItemAvatar } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport MdPhone from '@mui/icons-material/Phone';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n// import { deepPurple } from '@mui/material/colors';\n\nconst renderContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContact = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n  return visibleContact;\n};\n\nexport const ContactListItem = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const items = renderContacts(contacts, filter);\n\n  const handleDelete = e => {\n    const currentId = e.currentTarget.id;\n    console.log(currentId);\n    dispatch(deleteContact(currentId));\n  }\n\n  return items.map(({ name, number, id }) => (\n    <ListItem\n      key={id}\n      className={css.contact_item}\n      secondaryAction={\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={handleDelete}\n          id={id}\n        >\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemAvatar>\n        <Avatar>\n          <MdPhone color=\"info\" />\n        </Avatar>\n      </ListItemAvatar>\n      <span>\n        {' '}\n        {name}: {number}\n      </span>\n\n    </ListItem>\n  ));\n};\n      ","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\nimport css from 'components/ContactList/ContactList.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      <input\n        className={css.contacts__input}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={event => dispatch(setFilter(event.target.value))}\n        placeholder=\"Find contacts by name\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;","import List from '@mui/material/List';\nimport css from './ContactList.module.css';\nimport { ContactListItem } from './ContactListItem';\nimport Filter from 'components/Filter/Filter';\n\nexport const ContactList = () => {\n\n  return (\n    <div className={css.contacts__container}>\n      <h2 className={css.contacts__title}>\n        Your phone book  contacts\n      </h2>\n      <Filter/>\n      <List>\n        <ContactListItem />\n      </List>\n    </div>\n  );\n};","import { Button, Skeleton, Stack } from \"@mui/material\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { getIsLoading } from \"redux/contacts/selectors\";\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n    const [modalOpen, setModalOpen] = useState(false);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const openModal = evt => {\n        evt.preventDefault();\n        setModalOpen(prevState => !prevState);\n    };\n\n    return (\n        <>\n            {!modalOpen && (\n                <Button\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    type=\"button\"\n                    onClick={openModal}\n                    color=\"success\"\n                >\n                    Add contact\n                </Button>\n            )}\n\n            {/* <Helmet>\n                <title>Login</title>\n            </Helmet> */}\n\n            {modalOpen && <ContactForm setModalOpen={setModalOpen} />}\n            {isLoading && (\n                <Stack spacing={1}>\n                    <Skeleton variant=\"rectangular\" height={300} />\n                </Stack>\n            )}\n\n            {!modalOpen && !isLoading && <ContactList />}\n\n        </>\n    );\n};\n\nexport default Contacts;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"btn\":\"ContactForm_btn__wll+u\",\"red_label\":\"ContactForm_red_label__Otv37\",\"btn_close\":\"ContactForm_btn_close__XWEIj\"};"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","theme","createTheme","ContactForm","setModalOpen","useSelector","dispatch","useDispatch","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","IconButton","type","onClick","color","className","css","Close","Typography","variant","onSubmit","e","preventDefault","data","FormData","currentTarget","get","toast","form","presentContact","map","name","value","reset","addContact","number","noValidate","mt","TextField","margin","required","fullWidth","id","label","Button","mb","ContactListItem","normalizedFilter","toLowerCase","contact","includes","renderContacts","handleDelete","currentId","console","log","deleteContact","ListItem","secondaryAction","edge","Delete","ListItemAvatar","Avatar","pattern","title","onChange","event","setFilter","target","placeholder","ContactList","List","useState","modalOpen","useEffect","fetchContacts","evt","prevState","Stack","spacing","Skeleton","height"],"sourceRoot":""}